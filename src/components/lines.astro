---
interface Props {
  direction: "up" | "down" | "sides";
}

const { direction } = Astro.props;
---

{direction === "up" && <div class="up-line" />}
{
  direction === "sides" ? (
    <>
      <div id="left-line" class="up-line" />
      <div id="right-line" class="up-line" />
    </>
  ) : (
    <hr />
  )
}
{direction === "down" && <div class="down-line" />}

<style>
  hr {
    height: 0.5rem;
    border-width: 0;
    width: 0.125rem;
    margin: 0 auto;
    background-color: light-dark(var(--color-primary), var(--color-secondary));

    @media screen and (max-width: 600px) {
      margin: auto 0;
      height: 0.125rem;
      width: 0.5rem;
    }
  }

  div {
    height: 3.5rem;
    border-style: solid;
    border-width: 0.125rem;
    border-color: light-dark(var(--color-primary), var(--color-secondary));

    @media screen and (max-width: 600px) {
      width: 2.5rem;
      height: auto;
    }
  }

  .down-line {
    border-bottom-width: 0;

    @media screen and (max-width: 600px) {
      border-left-width: 0;
      border-bottom-width: 0.125rem;
    }
  }

  .up-line {
    border-top-width: 0;

    @media screen and (max-width: 600px) {
      border-right-width: 0;
      border-top-width: 0.125rem;
    }
  }

  #left-line,
  #right-line {
    height: 100%;
    border-top-width: 0;
    border-bottom-width: 0;

    @media screen and (max-width: 600px) {
      border-width: 0.125rem 0 0.125rem 0;
      width: 100%;
      height: auto;
    }
  }

  #left-line {
    grid-row: 1;
    grid-column: 1;
    border-right-width: 0;

    @media screen and (max-width: 600px) {
      border-bottom-width: 0;
    }
  }

  #right-line {
    grid-row: 1;
    grid-column: 4;
    border-left-width: 0;

    @media screen and (max-width: 600px) {
      border-top-width: 0;
    }
  }
</style>
